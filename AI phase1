import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
import numpy as np
import pandas as pd
import itertools
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_reportdf_fake=pd.read_csv('../input/fake-and-real-news-dataset/Fake.csv')
df_true=pd.read_csv('../input/fake-and-real-news-dataset/True.csv')
print(df_fake.shape)
print(df_true.shape)
df_fake.head()
(23481, 4)
(21417, 4)
df_X_train,X_test,y_train,y_test=train_test_split(df['text'], df['label'], test_size=0.2)
tfidf=TfidfVectorizer(stop_words='english', max_df=0.7)
train=tfidf.fit_transform(X_train) 
test=tfidf.transform(X_test)
pac=PassiveAggressiveClassifier(max_iter=50)
pac.fit(train,y_train)
y_pred=pac.predict(test)
score=accuracy_score(y_test,y_pred)
print(f'Accuracy: {round(score*100,2)}%')
Accuracy: 99.38%
confusion_matrix(y_test,y_pred)
df_fake['label']='fake'
df_true['label']='true'
df=pd.concat([df_fake,df_true], axis=0, ignore_index=True)
classification_report(y_test,y_pred)df['text_new']=df['title']+" "+df['text']+" "+df['subject']
dfX_train,X_test,y_train,y_test=train_test_split(df['text_new'], df['label'], test_size=0.2)
tfidf=TfidfVectorizer(stop_words='english', max_df=0.7)
train=tfidf.fit_transform(X_train) 
test=tfidf.transform(X_test)
pac=PassiveAggressiveClassifier(max_iter=50)
pac.fit(train,y_train)
y_pred=pac.predict(test)
score=accuracy_score(y_test,y_pred)
print(f'Accuracy: {round(score*100,2)}%')
Accuracy: 99.77%
confusion_matrix(y_test,y_pred)
classification_report(y_test,y_pred)